version: 2

jobs:
  build:    
    working_directory: /app
    docker:
      - image: docker:17.12.0-ce-git    
    steps:
      - checkout
      - setup_remote_docker

      - run: 
          name: Install dependencies
          command: |
            apk update && apk add -u libcurl 
            apk add --no-cache py-pip
            apk add --no-cache --update curl
            pip install --upgrade pip
            pip install awscli
            pip install docker-compose
    
      - run: 
          name: Use docker-compose to build and push
          command: | 
            docker-compose build 
            
            # Login to AWS
            aws configure set region $AWS_REGION
            $(aws ecr get-login --no-include-email)
            # Push docker images 
            docker-compose push
    
      - run: 
          name: Run app
          command: |
            set -x
            docker-compose up -d                        
            docker run --network container:app \
              appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost/cache-clear
  deploy:
    docker:
      - image: prakashsubramani/docker-build-image
    steps:
      - setup_remote_docker

      - deploy:
          name: Push application Docker image
          command: | 
            
            DOCKER_IMAGE='app'
            CLUSTER='app'
            FAMILY='app'
            DOCKER_IMAGE='app'
            LB_IMAGE='load-balancer'
            TASK='app'
            SERVICE='app-service'

            # Login to AWS
            #aws configure set region $AWS_REGION
            #$(aws ecr get-login --no-include-email)

            # Tag and push application image
            #docker tag app $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE:$CIRCLE_SHA1
            #docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE:$CIRCLE_SHA1

            # Tag and push load balancer image
            #docker tag app $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$LB_IMAGE:$CIRCLE_SHA1
            #docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$LB_IMAGE:$CIRCLE_SHA1

            # Create task for docker deploy
            dockerrun_template='{
              "AWSEBDockerrunVersion": "2",
              "containerDefinitions": [
               {
                 "name": "load-balancer",
                 "image": "%s.dkr.ecr.%s.amazonaws.com/load-balancer:%s",
                 "esential": true,
                 "memory": 128,
                 "portMappings": [ { "hostPort": 80, "containerPort": 80 } ],
                 "links": [ "app" ]      
               },
               {
                 "name": "app",
                 "image": "%s.dkr.ecr.%s.amazonaws.com/app:%s",
                 "esential": true,
                 "memory": 512,
                 "portMappings": [ { "hostPort": 3000, "containerPort": 3000 } ]      
               }
              ]
             }'

            dockerRun=$(printf "$dockerrun_template" $AWS_ACCOUNT_ID $AWS_REGION $CIRCLE_SHA1)
            echo "$dockerRun"
            return 0
  test:    
    docker:
      - image: circleci/node:6
    steps:
      - checkout
      - run: 
          name: Install app and test
          command: |            
            npm install && npm test
            
# Workflow 
workflows:
  version: 2
  build_test-deploy:
    jobs:
      - build:
          requires:
            - test
          filters:
            branches:
             only:
               - master 
               - /develop-.*/
      - deploy:
          requires:
            - build
          filters:
            branches:
             only:
               - master 
               - /develop-.*/                
      - test:
          filters:
            branches:
             only:
               - master               
               - develop
               - /feature-.*/ 
               - /release-.*/ 